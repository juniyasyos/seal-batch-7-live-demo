---
- name: Deploy Full Stack Application Gemini Clone with Monitoring and Testing
  hosts: all
  become: true
  gather_facts: true

  vars:
    project_repo: "https://github.com/juniyasyos/gemini-clone"
    project_dest: "/opt/gemini-project"
    monitoring_role: "monitoring"
    testing_role: "grafana-k6"
    gemini_token: "AIzaSyDoJdv50rA6tlr3aky1qEXkKugXybTbGGI"

  tasks:

  - name: Ensure Python is installed
    block:
      - name: Check Python installation
        ansible.builtin.command:
          cmd: python3 --version
        register: python_check
        changed_when: false
        failed_when: python_check.rc != 0

      - name: Install Python if not present
        ansible.builtin.raw: apt-get update && apt-get install -y python3
        when: python_check is failed

    rescue:
      - name: Fail if Python installation fails
        ansible.builtin.fail:
          msg: "Python installation failed. Ensure Python is installed on all hosts."

  - name: Fetch private IP addresses
    block:
      - name: Get private IP of testing server
        set_fact:
          ip_target_testing: "{{ hostvars[groups['tag_testing_server'][0]].ansible_default_ipv4.address | default('') }}"

      - name: Get private IP of frontend server
        set_fact:
          ip_target_frontend: "{{ hostvars[groups['tag_frontend_server'][0]].ansible_default_ipv4.address | default('') }}"

      - name: Debug IP addresses
        ansible.builtin.debug:
          msg:
            - "Frontend IP: {{ ip_target_frontend | default('Not defined') }}"
            - "Testing IP: {{ ip_target_testing | default('Not defined') }}"

  - name: Ensure Docker is installed
    block:
      - name: Check Docker installation
        ansible.builtin.command:
          cmd: docker --version
        register: docker_check
        changed_when: false
        failed_when: false

      - name: Install Docker if not installed
        ansible.builtin.include_role:
          name: docker
        when: docker_check.rc != 0

    rescue:
      - name: Fail if Docker installation fails
        ansible.builtin.fail:
          msg: "Docker installation failed. Check Docker role or system configuration."

  - name: Setup Gemini Clone Project
    block:
      - name: Include project setup tasks
        ansible.builtin.include_tasks: project.yaml
        when: "'tag_frontend_server' in group_names"

    rescue:
      - name: Fail if project setup fails
        ansible.builtin.fail:
          msg: "Project setup failed. Check repository URL or network connectivity."

  - name: Apply Monitoring Role
    ansible.builtin.include_role:
      name: "{{ monitoring_role }}"
    when: "'tag_frontend_server' in group_names"

  - name: Configure Testing Environment
    block:
      - name: Apply testing role with required variables
        ansible.builtin.include_role:
          name: "{{ testing_role }}"
        vars:
          ip_target: "{{ ip_target_frontend }}"
          ip_server: "{{ ip_target_testing }}"
          test_duration: "{{ test_duration | default('1m') }}"
          test_target: "{{ test_target | default('http://localhost') }}"
        when: "'tag_testing_server' in group_names"

    rescue:
      - name: Handle testing setup failure
        ansible.builtin.debug:
          msg: "Testing setup failed, but continuing deployment."
